{
  "Logging": {
    "LogLevel": {
      "Default": "Information",
      "Microsoft.AspNetCore": "Warning"
    }
  },
  //ocelot限流
  "RateLimitOptions": {
    "QuotaExceededMessage": "Too many requests!Please wait a moment!", // 当请求过载被截断时返回的消息，中文会出现乱码
    "HttpStatusCode": 503 // 当请求过载被截断时返回的http status
  },

  "AllowedHosts": "*",
  "Routes": [ //这里注意一下版本（旧版本用ReRoutes）
    {
      "DownstreamPathTemplate": "/rest/api/{controller}/{action}/{id}", //下游路径模板
      "DownstreamScheme": "http", //下游方案
      //"DownstreamHostAndPorts": [
      //  {
      //    "Host": "localhost",
      //    "Port": "5014"
      //  }
      //], //下游主机和端口
      "UpstreamPathTemplate": "/backend/rest/api/{controller}/{action}/{id}", //上游路径模板
      "UpstreamHttpMethod": [], //上游请求方法,可以设置特定的 HTTP 方法列表或设置空列表以允许其中任何方法
      "ServiceName": "api-backend-service", //请求服务名称
      "LoadBalancerOptions": {
        "Type": "LeastConnection" //负载均衡算法：目前 Ocelot 有RoundRobin 和LeastConnection算法
      },
      "UseAuthentication": false,
      //限流
      "RateLimitOptions": { //限流，限制了单位时间内的访问量
        "ClientWhitelist": [], //白名单
        "EnableRateLimiting": true,
        "Period": "1s", //1s, 5m, 1h, 1d  
        "PeriodTimespan": 3, //多少秒之后客户端可以重试
        "Limit": 1000 //统计时间段内允许的最大请求数量
      },
      //熔断设置
      "QoSOptions": {
        "ExceptionsAllowedBeforeBreaking": 3, //允许多少个异常请求
        "DurationOfBreak": 5000, // 熔断的时间5s，单位为ms
        "TimeoutValue": 5000 //单位ms,如果下游请求的处理时间超过多少则自动将请求设置为超时 默认90秒
      }
    },
    {
      "DownstreamPathTemplate": "/rest/api/{controller}/{action}", //下游路径模板
      "DownstreamScheme": "http", //下游方案
      //"DownstreamHostAndPorts": [
      //  {
      //    "Host": "localhost",
      //    "Port": "5014"
      //  }
      //], //下游主机和端口
      "UpstreamPathTemplate": "/backend/rest/api/{controller}/{action}", //上游路径模板
      "UpstreamHttpMethod": [], //上游请求方法,可以设置特定的 HTTP 方法列表或设置空列表以允许其中任何方法
      "ServiceName": "api-backend-service", //请求服务名称
      "LoadBalancerOptions": {
        "Type": "LeastConnection" //负载均衡算法：目前 Ocelot 有RoundRobin 和LeastConnection算法
      },
      "UseAuthentication": false,
      //限流
      "RateLimitOptions": { //限流，限制了单位时间内的访问量
        "ClientWhitelist": [], //白名单
        "EnableRateLimiting": true,
        "Period": "1s", //1s, 5m, 1h, 1d  
        "PeriodTimespan": 3, //多少秒之后客户端可以重试
        "Limit": 1000 //统计时间段内允许的最大请求数量
      }, 
      //熔断设置
      "QoSOptions": {
        "ExceptionsAllowedBeforeBreaking": 10, //允许多少个异常请求
        "DurationOfBreak": 5000, // 熔断的时间5s，单位为ms
        "TimeoutValue": 5000 //单位ms,如果下游请求的处理时间超过多少则自动将请求设置为超时 默认90秒
      }
    }
  ],
  "GlobalConfiguration": {
    "BaseUrl": "http://localhost:5015", //进行标头查找和替换以及某些管理配置
    "ServiceDiscoveryProvider": {
      "Scheme": "http",
      "Host": "localhost", //你的Consul的ip地址
      "Port": 8500, //你的Consul的端口
      "Type": "Consul" //类型
      //"ConfigurationKey": "Consul" //指定配置键，键入您的配置
    }
  }
}
